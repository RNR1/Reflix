{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/profile.server.ts", "../app/routes/logout.tsx", "../app/routes/movies.tsx", "../app/utils.ts", "../app/models/movie.server.ts", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/logout.tsx\";\nimport * as route2 from \"./routes/movies.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\nimport * as route4 from \"./routes/login.tsx\";\nimport * as route5 from \"./routes/join.tsx\";\nimport * as route6 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/movies\": {\n      id: \"routes/movies\",\n      parentId: \"root\",\n      path: \"movies\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 15000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getProfile } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Reflix\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  profile: Awaited<ReturnType<typeof getProfile>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    profile: await getProfile(request),\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Profile } from \"~/models/profile.server\";\nimport { getProfileByName } from \"~/models/profile.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"profileName\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getProfileName(\n  request: Request\n): Promise<Profile[\"username\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getProfile(request: Request) {\n  const profileName = await getProfileName(request);\n  if (profileName === undefined) return null;\n\n  const profile = await getProfileByName(profileName);\n  if (profile) return profile;\n\n  throw await logout(request);\n}\n\nexport async function requireProfileName(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const profileName = await getProfileName(request);\n  if (!profileName) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return profileName;\n}\n\nexport async function requireProfile(request: Request) {\n  const profileName = await requireProfileName(request);\n\n  const profile = await getProfileByName(profileName);\n  if (profile) return profile;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  profileName,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  profileName: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, profileName);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport invariant from \"tiny-invariant\";\n\nexport type Profile = { username: string; avatar: string | File | null };\n\nexport async function getProfileByName(\n  name: Profile[\"username\"]\n): Promise<Profile | null> {\n  const db = await arc.tables();\n  const result = await db.profile.query({\n    KeyConditionExpression: \"username = :username\",\n    ExpressionAttributeValues: { \":username\": name },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { username: record.username, avatar: record.avatar };\n  return null;\n}\n\nexport async function createProfile(\n  username: Profile[\"username\"],\n  avatar: Profile[\"avatar\"]\n) {\n  const db = await arc.tables();\n\n  await db.profile.put({\n    username,\n    avatar,\n  });\n\n  const user = await getProfileByName(username);\n  invariant(\n    user,\n    `Profile not found after being created. This should not happen`\n  );\n\n  return user;\n}\n\nexport async function deleteProfile(name: Profile[\"username\"]) {\n  const db = await arc.tables();\n  await db.profile.delete({ name });\n}\n\nexport async function verifyLogin(name: Profile[\"username\"]) {\n  return getProfileByName(name);\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json, redirect } from \"@remix-run/server-runtime\";\nimport React from \"react\";\nimport { requireProfileName } from \"~/session.server\";\nimport { useProfile } from \"~/utils\";\nimport { getMovieListItems } from \"~/models/movie.server\";\n\ntype LoaderData = {\n  movies: Awaited<ReturnType<typeof getMovieListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const profileName = await requireProfileName(request);\n  if (!profileName) return redirect(\"/\");\n  return json({ movies: await getMovieListItems() });\n};\n\nexport default function Movies() {\n  const data = useLoaderData() as LoaderData;\n  const profile = useProfile();\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Movies</Link>\n        </h1>\n        <p>{profile.username}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          {data.movies.length === 0 ? (\n            <p className=\"p-4\">No movies yet</p>\n          ) : (\n            <></>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { Profile } from \"~/models/profile.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nexport function isProfile(profile: any): profile is Profile {\n  return (\n    profile &&\n    typeof profile === \"object\" &&\n    typeof profile.username === \"string\"\n  );\n}\n\nexport function useOptionalProfile(): Profile | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isProfile(data.profile)) {\n    return undefined;\n  }\n  return data.profile;\n}\n\nexport function useProfile(): Profile {\n  const maybeProfile = useOptionalProfile();\n  if (!maybeProfile) {\n    throw new Error(\n      \"No profile found in root loader, but profile is required by useProfile. If profile is optional, try useOptionalProfile instead.\"\n    );\n  }\n  return maybeProfile;\n}\n", "export interface MovieSearchResponse {\n  page: number;\n  results: MovieDetails[];\n  total_results: number;\n  total_pages: number;\n}\n\nexport interface MovieDetails {\n  poster_path?: string;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  original_language: string;\n  title: string;\n  backdrop_path?: string;\n  popularity: number;\n  vote_count: number;\n  video: boolean;\n  vote_average: number;\n}\n\n// TODO: fetch Movies database for movies list\nexport async function getMovieListItems(): Promise<Array<MovieDetails>> {\n  return [];\n}\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalProfile } from \"~/utils\";\n\nexport default function Index() {\n  const profile = useOptionalProfile();\n\n  return (\n    <main className=\"relative min-h-screen bg-white sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pb-20 lg:pt-32\">\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                <span className=\"block uppercase text-red-500 drop-shadow-md\">\n                  Reflix\n                </span>\n              </h1>\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {profile ? (\n                  <Link\n                    to=\"/movies\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-red-700 shadow-sm hover:bg-red-50 sm:px-8\"\n                  >\n                    Enter as {profile.username}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-red-700 shadow-sm hover:bg-red-50 sm:px-8\"\n                    >\n                      Create Profile\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600\"\n                    >\n                      Go to Profiles\n                    </Link>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getProfileName } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/profile.server\";\nimport { safeRedirect } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getProfileName(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    username?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (typeof username !== \"string\") {\n    return json<ActionData>(\n      { errors: { username: \"Profile is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  const profile = await verifyLogin(username);\n\n  if (!profile) {\n    return json<ActionData>(\n      { errors: { username: \"Profile is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    profileName: profile.username,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/movies\";\n  const actionData = useActionData() as ActionData;\n  const nameRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.username) {\n      nameRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"name\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Name\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={nameRef}\n                id=\"username\"\n                required\n                autoFocus={true}\n                name=\"username\"\n                type=\"text\"\n                autoComplete=\"username\"\n                aria-invalid={actionData?.errors?.username ? true : undefined}\n                aria-describedby=\"name-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.username && (\n                <div className=\"pt-1 text-red-700\" id=\"username-error\">\n                  {actionData.errors.username}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have a profile?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getProfileName, createUserSession } from \"~/session.server\";\n\nimport { createProfile, getProfileByName } from \"~/models/profile.server\";\nimport { safeRedirect } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getProfileName(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    username?: string;\n    avatar?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const avatar = formData.get(\"avatar\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (typeof username !== \"string\" || username?.trim().length < 1) {\n    return json<ActionData>(\n      { errors: { username: \"Name is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingProfile = await getProfileByName(username);\n  if (existingProfile) {\n    return json<ActionData>(\n      { errors: { username: \"A profile already exists with this name\" } },\n      { status: 400 }\n    );\n  }\n\n  const profile = await createProfile(username, avatar);\n\n  return createUserSession({\n    request,\n    profileName: profile.username,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Create Profile\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const usernameRef = React.useRef<HTMLInputElement>(null);\n  const avatarRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.username) {\n      usernameRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"username\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Name\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={usernameRef}\n                id=\"username\"\n                required\n                autoFocus={true}\n                name=\"username\"\n                type=\"text\"\n                autoComplete=\"username\"\n                aria-invalid={actionData?.errors?.username ? true : undefined}\n                aria-describedby=\"username-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.username && (\n                <div className=\"pt-1 text-red-700\" id=\"username-error\">\n                  {actionData.errors.username}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"avatar\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Avatar\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"avatar\"\n                ref={avatarRef}\n                name=\"avatar\"\n                type=\"avatar\"\n                autoComplete=\"photo\"\n                aria-invalid={actionData?.errors?.avatar ? true : undefined}\n                aria-describedby=\"avatar-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.avatar && (\n                <div className=\"pt-1 text-red-700\" id=\"avatar-error\">\n                  {actionData.errors.avatar}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Profile\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have a profile?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Go to Profiles\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createProfile } from \"~/models/profile.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { username } = await request.json();\n  if (!username) {\n    throw new Error(\"name required for login\");\n  }\n\n  const profile = await createProfile(username, \"https://example.com\");\n\n  return createUserSession({\n    request,\n    profileName: profile.username,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'acc01119','entry':{'module':'/_static/build/entry.client-KH2EY74J.js','imports':['/_static/build/_shared/chunk-6CBTC43S.js','/_static/build/_shared/chunk-HRTTMHIP.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-6HENPL5S.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-EWGCDYTS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-Y5QRXM6Z.js','imports':['/_static/build/_shared/chunk-VLDN7FJT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-HW7WKQYX.js','imports':['/_static/build/_shared/chunk-QRXYEBC4.js','/_static/build/_shared/chunk-FCCJ6B32.js','/_static/build/_shared/chunk-VLDN7FJT.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-TCZSQTMY.js','imports':['/_static/build/_shared/chunk-QRXYEBC4.js','/_static/build/_shared/chunk-FCCJ6B32.js','/_static/build/_shared/chunk-VLDN7FJT.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-VBO75TCN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/movies':{'id':'routes/movies','parentId':'root','path':'movies','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/movies-6FEVXSIG.js','imports':['/_static/build/_shared/chunk-FCCJ6B32.js','/_static/build/_shared/chunk-VLDN7FJT.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-ACC01119.js'};"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "invariant", "invariant", "loader", "import_node", "loader", "loader", "import_react", "import_react", "route", "loader", "import_react", "action", "loader", "meta", "import_node", "import_react", "loader", "action", "meta", "_a", "_b", "action", "loader", "meta", "import_node", "import_react", "React", "loader", "action", "meta", "_a", "_b", "action", "import_node", "action"]
}
